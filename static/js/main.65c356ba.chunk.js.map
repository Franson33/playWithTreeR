{"version":3,"sources":["Components.tsx","components/Cube.tsx","screens/Cubes.tsx","components/CubeControlled.tsx","components/Controls.tsx","components/Plane.tsx","screens/ControlledCube.tsx","components/ListItem.tsx","screens/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","Header","Title","Body","List","StyledCanvas","Canvas","props","backColor","LinkBox","StyledLink","Link","LinkTitle","Cube","position","rotate","clockwise","useState","direction","setDirection","ref","useRef","hover","setHover","active","setActive","useEffect","useFrame","state","delta","current","rotation","y","spring","useSpring","scale","color","mesh","onClick","evt","onPointerOver","onPointerOut","args","meshStandardMaterial","Cubes","CubeControlled","cubeColor","cubeHoverColor","meshPhysicalMaterial","Controls","useThree","camera","gl","update","autoRotate","domElement","extend","OrbitControls","Plane","Math","PI","ControlledCube","intensity","penumbra","ListItem","item","to","link","title","listItems","Home","map","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65c356ba.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Link } from \"react-router-dom\";\n\ninterface StyledCanvasPropsInterface {\n  backColor?: string;\n}\n\nexport const Container = styled(\"div\")`\n  display: grid;\n  grid-template-columns: 100vw;\n  grid-template-rows: 10vh 90vh;\n`;\n\nexport const Header = styled(\"div\")`\n  display: grid;\n  grid-area: 1 / 1 / 2 / 2;\n  padding-left: 20px;\n  padding-right: 20px;\n  background-color: #97cedf;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.5);\n  z-index: 1;\n`;\n\nexport const Title = styled(\"h1\")`\n  height: 1fr;\n  align-self: center;\n`;\n\nexport const Body = styled(\"div\")`\n  display: grid;\n  grid-template-rows: auto;\n`;\n\nexport const List = styled(\"ul\")`\n  margin: 15px 25vw;\n  background-color: #fff;\n  border-radius: 5px;\n`;\n\nexport const StyledCanvas = styled(Canvas)`\n  display: grid;\n  grid-template-columns: 100vw;\n  grid-template-rows: 100vh;\n  background-color: ${(props: StyledCanvasPropsInterface) =>\n    props.backColor ? props.backColor : \"#151515\"};\n`;\n\nexport const LinkBox = styled(\"div\")`\n  display: grid;\n  width: 100%;\n  height: 5vh;\n  padding: 0px 10px;\n  margin: 15px 0px;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.4);\n\n  &:active {\n    transform: translateY(3px);\n    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.4),\n      inset 0px 1px 2px 0px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  height: 100%;\n`;\n\nexport const LinkTitle = styled(\"p\")`\n  align-self: center;\n  color: #c190dd;\n`;\n","import * as THREE from \"three\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useFrame, Vector3 } from \"@react-three/fiber\";\nimport { useSpring, a } from \"@react-spring/three\";\n\ninterface CubePropsInterface {\n  position: Vector3;\n  rotate?: boolean;\n  clockwise?: boolean;\n}\n\nfunction Cube({\n  position,\n  rotate,\n  clockwise,\n}: CubePropsInterface): JSX.Element {\n  const rotationValue = 0.009;\n  const [direction, setDirection] = useState(rotationValue);\n  const ref = useRef<THREE.Mesh>(null!);\n  const [hover, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (clockwise) {\n      setDirection(-rotationValue);\n    }\n  }, [clockwise]);\n\n  useFrame((state, delta) => {\n    if (rotate) {\n      ref.current.rotation.y += direction;\n    }\n  });\n\n  const spring = useSpring({\n    scale: active ? 2 : 1,\n    color: hover ? \"#ee8a8a\" : \"#a9f2af\",\n  });\n\n  return (\n    <a.mesh\n      position={position}\n      ref={ref}\n      scale={spring.scale}\n      onClick={(evt) => setActive(!active)}\n      onPointerOver={(evt) => setHover(true)}\n      onPointerOut={(evt) => setHover(false)}\n    >\n      <boxGeometry args={[1, 1, 1]} />\n      <a.meshStandardMaterial color={spring.color} />\n    </a.mesh>\n  );\n}\n\nexport default Cube;\n","import { StyledCanvas } from \"../Components\";\nimport Cube from \"../components/Cube\";\n\nfunction Cubes(): JSX.Element {\n  return (\n    <StyledCanvas>\n      <ambientLight />\n      <pointLight position={[50, 50, 50]} />\n      <Cube position={[1.5, 1.5, 0]} rotate clockwise />\n      <Cube position={[-1.5, -1.5, 0]} rotate clockwise />\n      <Cube position={[1.5, -1.5, 0]} rotate />\n      <Cube position={[-1.5, 1.5, 0]} rotate />\n    </StyledCanvas>\n  );\n}\n\nexport default Cubes;\n","import { useState } from \"react\";\nimport { useSpring, a } from \"@react-spring/three\";\n\ninterface CubeControlledPropsInterface {\n  cubeColor?: string;\n  cubeHoverColor?: string;\n}\n\nfunction CubeControlled({\n  cubeColor,\n  cubeHoverColor,\n}: CubeControlledPropsInterface): JSX.Element {\n  const [hover, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  const spring = useSpring({\n    scale: active ? 1.5 : 1,\n    color: hover ? cubeHoverColor ?? \"#ee8a8a\" : cubeColor ?? \"#a9f2af\",\n  });\n\n  return (\n    <a.mesh\n      scale={spring.scale}\n      onClick={(evt) => setActive(!active)}\n      onPointerOver={(evt) => setHover(true)}\n      onPointerOut={(evt) => setHover(false)}\n    >\n      <boxGeometry args={[2, 2, 2]} />\n      <a.meshPhysicalMaterial color={spring.color} />\n    </a.mesh>\n  );\n}\n\nexport default CubeControlled;\n","import { useRef } from \"react\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport {\n  extend,\n  useThree,\n  ReactThreeFiber,\n  useFrame,\n} from \"@react-three/fiber\";\n\nextend({ OrbitControls });\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      orbitControls: ReactThreeFiber.Object3DNode<\n        OrbitControls,\n        typeof OrbitControls\n      >;\n    }\n  }\n}\n\nexport default function Controls() {\n  const ref = useRef<any>();\n  const { camera, gl } = useThree();\n\n  useFrame(() => {\n    ref.current.update();\n  });\n\n  return <orbitControls autoRotate ref={ref} args={[camera, gl.domElement]} />;\n}\n","import React from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nfunction Plane(): JSX.Element {\n  return (\n    <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -1.5, 0]}>\n      <planeBufferGeometry args={[50, 50]} />\n      <meshPhysicalMaterial color={\"#9d9d9d\"} />\n    </mesh>\n  );\n}\n\nexport default Plane;\n","import { StyledCanvas } from \"../Components\";\nimport CubeControlled from \"../components/CubeControlled\";\nimport Controls from \"../components/Controls\";\nimport Plane from \"../components/Plane\";\n\nfunction ControlledCube(): JSX.Element {\n  return (\n    <StyledCanvas backColor={\"#f0f0f0\"}>\n      <ambientLight />\n      <spotLight intensity={5} position={[0, 5, 10]} penumbra={1} />\n      <Controls />\n      <CubeControlled cubeColor={\"#000\"} />\n      <Plane />\n    </StyledCanvas>\n  );\n}\n\nexport default ControlledCube;\n","import { ListItemInterface } from \"../screens/Home\";\nimport { LinkBox, StyledLink, LinkTitle } from \"../Components\";\n\ninterface ListItemPropsInterface {\n  item: ListItemInterface;\n}\n\nfunction ListItem({ item }: ListItemPropsInterface): JSX.Element {\n  return (\n    <LinkBox>\n      <StyledLink to={item.link} key={item.title}>\n        <LinkTitle>{item.title}</LinkTitle>\n      </StyledLink>\n    </LinkBox>\n  );\n}\n\nexport default ListItem;\n","import React from \"react\";\nimport { Container, Header, Title, Body, List } from \"../Components\";\nimport ListItem from \"../components/ListItem\";\n\nexport interface ListItemInterface {\n  title: string;\n  link: string;\n}\n\nconst listItems: ListItemInterface[] = [\n  { title: \"Rotating cubes\", link: \"/cubes\" },\n  { title: \"Controlled cube\", link: \"/controlledCube\" },\n];\n\nfunction Home(): JSX.Element {\n  return (\n    <Container>\n      <Header>\n        <Title>PlayWithThree!</Title>\n      </Header>\n      <Body>\n        <List>\n          {listItems.map((item) => (\n            <ListItem item={item} />\n          ))}\n        </List>\n      </Body>\n    </Container>\n  );\n}\n\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Cubes from \"./screens/Cubes\";\nimport ControlledCube from \"./screens/ControlledCube\";\nimport Home from \"./screens/Home\";\n\nfunction App(): JSX.Element {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/controlledCube\">\n          <ControlledCube />\n        </Route>\n        <Route path=\"/cubes\">\n          <Cubes />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}