{"version":3,"sources":["Components.tsx","components/Cube.tsx","screens/Cubes.tsx","components/ListItem.tsx","screens/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","Header","Title","Body","List","StyledCanvas","Canvas","StyledLink","Link","Cube","props","ref","useRef","useState","hover","setHover","active","setActive","useFrame","state","delta","current","rotation","x","y","scale","onClick","evt","onPointerOver","onPointerOut","args","color","Cubes","position","ListItem","item","to","link","title","Home","map","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAIaA,EAAYC,YAAO,MAAPA,CAAH,iHAMTC,EAASD,YAAO,MAAPA,CAAH,yNAUNE,EAAQF,YAAO,KAAPA,CAAH,mEAKLG,EAAOH,YAAO,MAAPA,CAAH,2EAKJI,EAAOJ,YAAO,KAAPA,CAAH,mGAMJK,EAAeL,YAAOM,IAAPN,CAAH,6GAMZO,EAAaP,YAAOQ,IAAPR,CAAH,+C,qBCfRS,MAvBf,SAAcC,GACZ,IAAMC,EAAMC,iBAAmB,MADgC,EAErCC,oBAAS,GAF4B,mBAExDC,EAFwD,KAEjDC,EAFiD,OAGnCF,oBAAS,GAH0B,mBAGxDG,EAHwD,KAGhDC,EAHgD,KAQ/D,OAJAC,aAAS,SAACC,EAAOC,GACfT,EAAIU,QAAQC,SAASC,GAAK,KAC1BZ,EAAIU,QAAQC,SAASE,GAAK,OAG1B,iDACMd,GADN,IAEEC,IAAKA,EACLc,MAAOT,EAAS,EAAI,EACpBU,QAAS,SAACC,GAAD,OAASV,GAAWD,IAC7BY,cAAe,SAACD,GAAD,OAASZ,GAAS,IACjCc,aAAc,SAACF,GAAD,OAASZ,GAAS,IANlC,UAQE,6BAAae,KAAM,CAAC,EAAG,EAAG,KAC1B,sCAAsBC,MAAOjB,EAAQ,UAAY,iBCNxCkB,MAbf,WACE,OACE,eAAC3B,EAAD,WACE,iCACA,4BAAY4B,SAAU,CAAC,GAAI,GAAI,MAC/B,cAAC,EAAD,CAAMA,SAAU,CAAC,IAAK,IAAK,KAC3B,cAAC,EAAD,CAAMA,SAAU,EAAE,KAAM,IAAK,KAC7B,cAAC,EAAD,CAAMA,SAAU,CAAC,KAAM,IAAK,KAC5B,cAAC,EAAD,CAAMA,SAAU,EAAE,IAAK,IAAK,SCCnBC,MAJf,YAAkE,IAA9CC,EAA6C,EAA7CA,KAClB,OAAO,cAAC5B,EAAD,CAAY6B,GAAID,EAAKE,KAArB,SAA4BF,EAAKG,SCmB3BC,MAnBf,WAGE,OACE,eAACxC,EAAD,WACE,cAACE,EAAD,UACE,cAACC,EAAD,+BAEF,cAACC,EAAD,UACE,cAACC,EAAD,UARiC,CAAC,CAAEkC,MAAO,QAASD,KAAM,WAS7CG,KAAI,SAACL,GAAD,OACb,cAAC,EAAD,CAAUA,KAAMA,eCDbM,MAff,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCEKC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c61952b.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled(\"div\")`\n  display: grid;\n  grid-template-columns: 100vw;\n  grid-template-rows: 10vh 90vh;\n`;\n\nexport const Header = styled(\"div\")`\n  display: grid;\n  grid-area: 1 / 1 / 2 / 2;\n  padding-left: 20px;\n  padding-right: 20px;\n  background-color: #97cedf;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.5);\n  z-index: 1;\n`;\n\nexport const Title = styled(\"h1\")`\n  height: 1fr;\n  align-self: center;\n`;\n\nexport const Body = styled(\"div\")`\n  display: grid;\n  grid-template-rows: auto;\n`;\n\nexport const List = styled(\"ul\")`\n  margin: 5vh 25vw;\n  background-color: #fff;\n  border-radius: 5px;\n`;\n\nexport const StyledCanvas = styled(Canvas)`\n  display: grid;\n  grid-template-columns: 100vw;\n  grid-template-rows: 100vh;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #c190dd;\n`;\n","import * as THREE from \"three\";\nimport React, { useState, useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nfunction Cube(props: JSX.IntrinsicElements[\"mesh\"]): JSX.Element {\n  const ref = useRef<THREE.Mesh>(null!);\n  const [hover, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  useFrame((state, delta) => {\n    ref.current.rotation.x += 0.001;\n    ref.current.rotation.y += 0.01;\n  });\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={active ? 2 : 1}\n      onClick={(evt) => setActive(!active)}\n      onPointerOver={(evt) => setHover(true)}\n      onPointerOut={(evt) => setHover(false)}\n    >\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hover ? \"#ee8a8a\" : \"#a9f2af\"} />\n    </mesh>\n  );\n}\n\nexport default Cube;\n","import { StyledCanvas } from \"../Components\";\nimport Cube from \"../components/Cube\";\n\nfunction Cubes(): JSX.Element {\n  return (\n    <StyledCanvas>\n      <ambientLight />\n      <pointLight position={[10, 10, 20]} />\n      <Cube position={[1.5, 1.5, 0]} />\n      <Cube position={[-1.5, -1.5, 0]} />\n      <Cube position={[1.5, -1.5, 0]} />\n      <Cube position={[-1.5, 1.5, 0]} />\n    </StyledCanvas>\n  );\n}\n\nexport default Cubes;\n","import React from \"react\";\nimport { ListItemInterface } from \"../screens/Home\";\nimport { StyledLink } from \"../Components\";\n\ninterface ListItemPropsInterface {\n  item: ListItemInterface;\n}\n\nfunction ListItem({ item }: ListItemPropsInterface): JSX.Element {\n  return <StyledLink to={item.link}>{item.title}</StyledLink>;\n}\n\nexport default ListItem;\n","import React from \"react\";\nimport { Container, Header, Title, Body, List } from \"../Components\";\nimport ListItem from \"../components/ListItem\";\n\nexport interface ListItemInterface {\n  title: string;\n  link: string;\n}\n\nfunction Home(): JSX.Element {\n  const listItems: ListItemInterface[] = [{ title: \"Cubes\", link: \"/cubes\" }];\n\n  return (\n    <Container>\n      <Header>\n        <Title>PlayWithThree!</Title>\n      </Header>\n      <Body>\n        <List>\n          {listItems.map((item) => (\n            <ListItem item={item} />\n          ))}\n        </List>\n      </Body>\n    </Container>\n  );\n}\n\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Cubes from \"./screens/Cubes\";\nimport Home from \"./screens/Home\";\n\nfunction App(): JSX.Element {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/cubes\">\n          <Cubes />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}